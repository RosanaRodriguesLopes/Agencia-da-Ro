// <auto-generated />
using System;
using AgDeViagem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgDeViagem.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgDeViagem.Models.Contato", b =>
                {
                    b.Property<int>("Id_Contato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContatoId_Contato")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PromoçãoId_Promoção")
                        .HasColumnType("int");

                    b.Property<int>("Senha")
                        .HasColumnType("int");

                    b.HasKey("Id_Contato");

                    b.HasIndex("ContatoId_Contato");

                    b.HasIndex("PromoçãoId_Promoção");

                    b.ToTable("contatos");
                });

            modelBuilder.Entity("AgDeViagem.Models.Passagem", b =>
                {
                    b.Property<int>("Id_Passagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data_Ida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Volta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Contato")
                        .HasColumnType("int");

                    b.Property<int>("Id_Promoção")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("contatoId_Contato")
                        .HasColumnType("int");

                    b.Property<string>("imgPassagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("promoçãoId_Promoção")
                        .HasColumnType("int");

                    b.HasKey("Id_Passagem");

                    b.HasIndex("contatoId_Contato");

                    b.HasIndex("promoçãoId_Promoção");

                    b.ToTable("passagens");
                });

            modelBuilder.Entity("AgDeViagem.Models.Promoção", b =>
                {
                    b.Property<int>("Id_Promoção")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor_Final")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Promoção");

                    b.ToTable("promoções");
                });

            modelBuilder.Entity("AgDeViagem.Models.Contato", b =>
                {
                    b.HasOne("AgDeViagem.Models.Contato", null)
                        .WithMany("contato")
                        .HasForeignKey("ContatoId_Contato");

                    b.HasOne("AgDeViagem.Models.Promoção", null)
                        .WithMany("contato")
                        .HasForeignKey("PromoçãoId_Promoção");
                });

            modelBuilder.Entity("AgDeViagem.Models.Passagem", b =>
                {
                    b.HasOne("AgDeViagem.Models.Contato", "contato")
                        .WithMany()
                        .HasForeignKey("contatoId_Contato");

                    b.HasOne("AgDeViagem.Models.Promoção", "promoção")
                        .WithMany()
                        .HasForeignKey("promoçãoId_Promoção");

                    b.Navigation("contato");

                    b.Navigation("promoção");
                });

            modelBuilder.Entity("AgDeViagem.Models.Contato", b =>
                {
                    b.Navigation("contato");
                });

            modelBuilder.Entity("AgDeViagem.Models.Promoção", b =>
                {
                    b.Navigation("contato");
                });
#pragma warning restore 612, 618
        }
    }
}
